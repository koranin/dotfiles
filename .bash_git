# https://jonsuh.com/blog/git-command-line-shortcuts/

# ----------------------
# Git Aliases
# ----------------------
alias ga='git add'
alias gaa='git add .'
alias gaaa='git add --all'
alias gau='git add --update'
alias gb='git branch'
alias gbd='git branch --delete '
alias gc='git commit'
# alias gcm='git commit --message'
alias gcf='git commit --fixup'
# alias gco='git checkout'
# alias gcob='git checkout -b'
alias gcom='git checkout master'
alias gcos='git checkout staging'
alias gcod='git checkout develop'
alias gd='git diff'
alias gda='git diff HEAD'
alias gi='git init'
alias glg='git log --graph --oneline --decorate --all'
alias gld='git log --pretty=format:"%h %ad %s" --date=short --all'
alias gm='git merge --no-ff'
alias gma='git merge --abort'
alias gmc='git merge --continue'
alias gp='git pull'
alias gpr='git pull --rebase'
alias gr='git rebase'
alias gs='git status'
alias gss='git status --short'
alias gst='git stash'
alias gsta='git stash apply'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash save'

# ----------------------
# Git Functions
# ----------------------
# Git log find by commit message

export JIRA_PREFIX=PLSVC

function gcob {
  git checkout -b $JIRA_PREFIX-$1_${2// /_}
}

#function gcob {
#  echo "hello world $JIRA_PREFIX" 
  # git checkout -b "${JIRA_PREFIX}-${1}"
#}

alias gbr="git branch -r | grep 'origin/$JIRA_PREFIX' | cut -d '/' -f 2 | sed 's/^/  /'"

function gco {
  if [ -z "$1" ]
  then
    git branch
    return;
  fi
  jira_ticket="$JIRA_PREFIX-$1";
  branch_name=$(git branch | grep "$jira_ticket" | xargs);
  echo "checking out $branch_name";
  git checkout $branch_name;
}

function gcor {
  if [ -z "$1" ]
  then
    gbr
    return;
  fi
  jira_ticket="$JIRA_PREFIX-$1";
  branch_name=$(git branch -r | grep "$jira_ticket" | xargs | cut -d '/' -f 2);
  echo "checking out origin/$branch_name";
  git checkout $branch_name;
}

glf() { git log --all --grep="$1"; }

gcm() {
  if [ -z "$1" ]
  then
    echo "missing commit message"
		return;
  fi

	jira_ticket="$((git symbolic-ref --quiet --short HEAD || \
		git rev-parse --short HEAD) | \
	  awk -F'_' '{print $1}')";

  commit_message="$jira_ticket $1"
  echo "committing $commit_message";
	
	git commit -m "$commit_message";
}
